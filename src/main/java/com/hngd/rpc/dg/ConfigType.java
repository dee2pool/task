// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dgAPi.proto

package com.hngd.rpc.dg;

/**
 * <pre>
 *周期任务配置类型
 * </pre>
 *
 * Protobuf enum {@code hngdrpcdg.ConfigType}
 */
public enum ConfigType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *增加
   * </pre>
   *
   * <code>ADD = 0;</code>
   */
  ADD(0),
  /**
   * <pre>
   *删除
   * </pre>
   *
   * <code>DEL = 1;</code>
   */
  DEL(1),
  /**
   * <pre>
   *清理
   * </pre>
   *
   * <code>CLEAR = 2;</code>
   */
  CLEAR(2),
  ;

  /**
   * <pre>
   *增加
   * </pre>
   *
   * <code>ADD = 0;</code>
   */
  public static final int ADD_VALUE = 0;
  /**
   * <pre>
   *删除
   * </pre>
   *
   * <code>DEL = 1;</code>
   */
  public static final int DEL_VALUE = 1;
  /**
   * <pre>
   *清理
   * </pre>
   *
   * <code>CLEAR = 2;</code>
   */
  public static final int CLEAR_VALUE = 2;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ConfigType valueOf(int value) {
    return forNumber(value);
  }

  public static ConfigType forNumber(int value) {
    switch (value) {
      case 0: return ADD;
      case 1: return DEL;
      case 2: return CLEAR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ConfigType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ConfigType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ConfigType>() {
          public ConfigType findValueByNumber(int number) {
            return ConfigType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.hngd.rpc.dg.DgApiProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final ConfigType[] VALUES = values();

  public static ConfigType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ConfigType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:hngdrpcdg.ConfigType)
}

